apply plugin: "idea"
apply plugin: 'java'
apply plugin: "eu.xenit.alfresco"
apply plugin: "eu.xenit.amp"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    alfrescoProvided(enforcedPlatform("eu.xenit.alfresco:alfresco-community-bom:${alfrescoVersion}"))

    alfrescoProvided("org.alfresco:alfresco-core") { transitive = false }
    alfrescoProvided("org.alfresco:alfresco-repository") { transitive = false }
    alfrescoProvided("org.alfresco:alfresco-data-model") { transitive = false }
    alfrescoProvided("org.springframework:spring-core") { transitive = false }
    alfrescoProvided("org.springframework:spring-beans") { transitive = false }
    alfrescoProvided 'org.slf4j:slf4j-api'

    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testImplementation "commons-logging:commons-logging"

    // all required just to be able to mock the RetryingTransactionHelper (static initializer): --'
    testRuntimeOnly "org.springframework:spring-aop"
    testRuntimeOnly 'javax.transaction:jta'
    testRuntimeOnly 'org.springframework:spring-tx'
    testRuntimeOnly 'org.springframework:spring-jdbc'
    testRuntimeOnly 'org.mybatis:mybatis'
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact amp
        }
    }
}