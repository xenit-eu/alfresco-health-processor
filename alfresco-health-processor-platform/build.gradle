plugins {
    id 'java-test-fixtures'
    id 'java-library'
    id 'io.freefair.lombok'
    id 'eu.xenit.alfresco'
    id 'eu.xenit.amp'
}

//description = "Alfresco Repository module for ${rootProject.description}"

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    alfrescoProvided platform("org.alfresco:acs-community-packaging:${alfrescoVersion}")
    testFixturesApi platform("org.alfresco:acs-community-packaging:${alfrescoVersion}")

    alfrescoProvided("org.alfresco:alfresco-repository") {
        exclude module: 'spring-social-facebook-web'
    }
    alfrescoProvided "io.micrometer:micrometer-core:${micrometerVersion}"
    api(project(':alfresco-health-processor-api')) { transitive = false }

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation 'org.slf4j:slf4j-simple:1.7.25'
    testImplementation 'com.github.paweladamski:HttpClientMock:1.10.0'

    testFixturesImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testFixturesApi "com.google.code.findbugs:jsr305:3.0.2"
    testFixturesApi(project(':alfresco-health-processor-api'))
    testFixturesApi("org.alfresco:alfresco-data-model")
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
}

amp {
    libs = jar.outputs.files + configurations.runtimeClasspath - configurations.alfrescoProvided
}

apply from: "${rootDir}/gradle/publish.gradle"

publishing {
    publications {
        java(MavenPublication) {
            from(components.java)
            artifact tasks.amp
        }
    }
}
