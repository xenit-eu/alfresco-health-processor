plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id 'java-test-fixtures'
    id 'java-library'
    id 'io.freefair.lombok' version '6.2.0'
    id 'eu.xenit.alfresco'
    id 'eu.xenit.amp'
}

description = "A background processor capable of performing various operations on the nodes in your Alfresco repository, in a batched and controlled manner"

apply from: "${rootDir}/gradle/internalPlatform.gradle"

configurations {
    ampLib {
        extendsFrom(runtimeClasspath)
    }
    embedded {
        canBeConsumed = false
        canBeResolved = true
        compileClasspath.extendsFrom(it)
    }
    runtimeElements {
        outgoing.artifact(project.tasks.named('shadowJar'))
    }
    apiElements {
        outgoing.artifact(project.tasks.named('shadowJar'))
    }
    alfrescoProvided {
        extendsFrom(internalPlatform)
    }
}

java {
    jar {
        enabled = false
    }
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    internalPlatform platform("eu.xenit.alfresco:alfresco-community-bom:${alfrescoVersion}")

    alfrescoProvided("org.alfresco:alfresco-repository") {
        exclude module: 'spring-social-facebook-web'
    }
    alfrescoProvided "io.micrometer:micrometer-core:${micrometerVersion}"
    embedded 'com.google.guava:guava:30.1-jre'
    api project(':alfresco-health-processor-api')

    ampLib project(":alfresco-health-processor-platform:alfresco-7-upwards")

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation 'org.slf4j:slf4j-simple:1.7.25'
    testImplementation 'com.github.paweladamski:HttpClientMock:1.10.0'

    testFixturesImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testFixturesApi "com.google.code.findbugs:jsr305:3.0.2"
    testFixturesApi(project(':alfresco-health-processor-api'))
    testFixturesApi("org.alfresco:alfresco-data-model")
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "eu.xenit.alfresco.healthprocessor.internal.shadow"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar
tasks.assemble.dependsOn tasks.shadowJar

shadowJar {
    configurations = [ project.configurations.embedded ]
    archiveClassifier.set('')
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
}

amp {
    libs = shadowJar.outputs.files + configurations.ampLib - configurations.alfrescoProvided
}

apply from: "${rootDir}/gradle/publish.gradle"

components.java {
    withVariantsFromConfiguration(configurations.shadowRuntimeElements) {
        skip()
    }
}


publishing {
    publications {
        java(MavenPublication) {
            from(components.java)
            artifact amp
        }
    }
}
